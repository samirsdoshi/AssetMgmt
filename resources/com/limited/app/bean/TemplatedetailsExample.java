package com.limited.app.bean;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.springframework.stereotype.Component;

@Component
public class TemplatedetailsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table templatedetails
     *
     * @mbggenerated Mon Feb 28 11:07:27 EST 2011
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table templatedetails
     *
     * @mbggenerated Mon Feb 28 11:07:27 EST 2011
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table templatedetails
     *
     * @mbggenerated Mon Feb 28 11:07:27 EST 2011
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table templatedetails
     *
     * @mbggenerated Mon Feb 28 11:07:27 EST 2011
     */
    public TemplatedetailsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table templatedetails
     *
     * @mbggenerated Mon Feb 28 11:07:27 EST 2011
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table templatedetails
     *
     * @mbggenerated Mon Feb 28 11:07:27 EST 2011
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table templatedetails
     *
     * @mbggenerated Mon Feb 28 11:07:27 EST 2011
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table templatedetails
     *
     * @mbggenerated Mon Feb 28 11:07:27 EST 2011
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table templatedetails
     *
     * @mbggenerated Mon Feb 28 11:07:27 EST 2011
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table templatedetails
     *
     * @mbggenerated Mon Feb 28 11:07:27 EST 2011
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table templatedetails
     *
     * @mbggenerated Mon Feb 28 11:07:27 EST 2011
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table templatedetails
     *
     * @mbggenerated Mon Feb 28 11:07:27 EST 2011
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table templatedetails
     *
     * @mbggenerated Mon Feb 28 11:07:27 EST 2011
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table templatedetails
     *
     * @mbggenerated Mon Feb 28 11:07:27 EST 2011
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table templatedetails
     *
     * @mbggenerated Mon Feb 28 11:07:27 EST 2011
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTemplateidIsNull() {
            addCriterion("templateid is null");
            return (Criteria) this;
        }

        public Criteria andTemplateidIsNotNull() {
            addCriterion("templateid is not null");
            return (Criteria) this;
        }

        public Criteria andTemplateidEqualTo(Integer value) {
            addCriterion("templateid =", value, "templateid");
            return (Criteria) this;
        }

        public Criteria andTemplateidNotEqualTo(Integer value) {
            addCriterion("templateid <>", value, "templateid");
            return (Criteria) this;
        }

        public Criteria andTemplateidGreaterThan(Integer value) {
            addCriterion("templateid >", value, "templateid");
            return (Criteria) this;
        }

        public Criteria andTemplateidGreaterThanOrEqualTo(Integer value) {
            addCriterion("templateid >=", value, "templateid");
            return (Criteria) this;
        }

        public Criteria andTemplateidLessThan(Integer value) {
            addCriterion("templateid <", value, "templateid");
            return (Criteria) this;
        }

        public Criteria andTemplateidLessThanOrEqualTo(Integer value) {
            addCriterion("templateid <=", value, "templateid");
            return (Criteria) this;
        }

        public Criteria andTemplateidIn(List<Integer> values) {
            addCriterion("templateid in", values, "templateid");
            return (Criteria) this;
        }

        public Criteria andTemplateidNotIn(List<Integer> values) {
            addCriterion("templateid not in", values, "templateid");
            return (Criteria) this;
        }

        public Criteria andTemplateidBetween(Integer value1, Integer value2) {
            addCriterion("templateid between", value1, value2, "templateid");
            return (Criteria) this;
        }

        public Criteria andTemplateidNotBetween(Integer value1, Integer value2) {
            addCriterion("templateid not between", value1, value2, "templateid");
            return (Criteria) this;
        }

        public Criteria andAlloctypeidIsNull() {
            addCriterion("alloctypeid is null");
            return (Criteria) this;
        }

        public Criteria andAlloctypeidIsNotNull() {
            addCriterion("alloctypeid is not null");
            return (Criteria) this;
        }

        public Criteria andAlloctypeidEqualTo(Integer value) {
            addCriterion("alloctypeid =", value, "alloctypeid");
            return (Criteria) this;
        }

        public Criteria andAlloctypeidNotEqualTo(Integer value) {
            addCriterion("alloctypeid <>", value, "alloctypeid");
            return (Criteria) this;
        }

        public Criteria andAlloctypeidGreaterThan(Integer value) {
            addCriterion("alloctypeid >", value, "alloctypeid");
            return (Criteria) this;
        }

        public Criteria andAlloctypeidGreaterThanOrEqualTo(Integer value) {
            addCriterion("alloctypeid >=", value, "alloctypeid");
            return (Criteria) this;
        }

        public Criteria andAlloctypeidLessThan(Integer value) {
            addCriterion("alloctypeid <", value, "alloctypeid");
            return (Criteria) this;
        }

        public Criteria andAlloctypeidLessThanOrEqualTo(Integer value) {
            addCriterion("alloctypeid <=", value, "alloctypeid");
            return (Criteria) this;
        }

        public Criteria andAlloctypeidIn(List<Integer> values) {
            addCriterion("alloctypeid in", values, "alloctypeid");
            return (Criteria) this;
        }

        public Criteria andAlloctypeidNotIn(List<Integer> values) {
            addCriterion("alloctypeid not in", values, "alloctypeid");
            return (Criteria) this;
        }

        public Criteria andAlloctypeidBetween(Integer value1, Integer value2) {
            addCriterion("alloctypeid between", value1, value2, "alloctypeid");
            return (Criteria) this;
        }

        public Criteria andAlloctypeidNotBetween(Integer value1, Integer value2) {
            addCriterion("alloctypeid not between", value1, value2, "alloctypeid");
            return (Criteria) this;
        }

        public Criteria andSecidIsNull() {
            addCriterion("secid is null");
            return (Criteria) this;
        }

        public Criteria andSecidIsNotNull() {
            addCriterion("secid is not null");
            return (Criteria) this;
        }

        public Criteria andSecidEqualTo(Integer value) {
            addCriterion("secid =", value, "secid");
            return (Criteria) this;
        }

        public Criteria andSecidNotEqualTo(Integer value) {
            addCriterion("secid <>", value, "secid");
            return (Criteria) this;
        }

        public Criteria andSecidGreaterThan(Integer value) {
            addCriterion("secid >", value, "secid");
            return (Criteria) this;
        }

        public Criteria andSecidGreaterThanOrEqualTo(Integer value) {
            addCriterion("secid >=", value, "secid");
            return (Criteria) this;
        }

        public Criteria andSecidLessThan(Integer value) {
            addCriterion("secid <", value, "secid");
            return (Criteria) this;
        }

        public Criteria andSecidLessThanOrEqualTo(Integer value) {
            addCriterion("secid <=", value, "secid");
            return (Criteria) this;
        }

        public Criteria andSecidIn(List<Integer> values) {
            addCriterion("secid in", values, "secid");
            return (Criteria) this;
        }

        public Criteria andSecidNotIn(List<Integer> values) {
            addCriterion("secid not in", values, "secid");
            return (Criteria) this;
        }

        public Criteria andSecidBetween(Integer value1, Integer value2) {
            addCriterion("secid between", value1, value2, "secid");
            return (Criteria) this;
        }

        public Criteria andSecidNotBetween(Integer value1, Integer value2) {
            addCriterion("secid not between", value1, value2, "secid");
            return (Criteria) this;
        }

        public Criteria andIndidIsNull() {
            addCriterion("indid is null");
            return (Criteria) this;
        }

        public Criteria andIndidIsNotNull() {
            addCriterion("indid is not null");
            return (Criteria) this;
        }

        public Criteria andIndidEqualTo(Integer value) {
            addCriterion("indid =", value, "indid");
            return (Criteria) this;
        }

        public Criteria andIndidNotEqualTo(Integer value) {
            addCriterion("indid <>", value, "indid");
            return (Criteria) this;
        }

        public Criteria andIndidGreaterThan(Integer value) {
            addCriterion("indid >", value, "indid");
            return (Criteria) this;
        }

        public Criteria andIndidGreaterThanOrEqualTo(Integer value) {
            addCriterion("indid >=", value, "indid");
            return (Criteria) this;
        }

        public Criteria andIndidLessThan(Integer value) {
            addCriterion("indid <", value, "indid");
            return (Criteria) this;
        }

        public Criteria andIndidLessThanOrEqualTo(Integer value) {
            addCriterion("indid <=", value, "indid");
            return (Criteria) this;
        }

        public Criteria andIndidIn(List<Integer> values) {
            addCriterion("indid in", values, "indid");
            return (Criteria) this;
        }

        public Criteria andIndidNotIn(List<Integer> values) {
            addCriterion("indid not in", values, "indid");
            return (Criteria) this;
        }

        public Criteria andIndidBetween(Integer value1, Integer value2) {
            addCriterion("indid between", value1, value2, "indid");
            return (Criteria) this;
        }

        public Criteria andIndidNotBetween(Integer value1, Integer value2) {
            addCriterion("indid not between", value1, value2, "indid");
            return (Criteria) this;
        }

        public Criteria andInteridIsNull() {
            addCriterion("interid is null");
            return (Criteria) this;
        }

        public Criteria andInteridIsNotNull() {
            addCriterion("interid is not null");
            return (Criteria) this;
        }

        public Criteria andInteridEqualTo(Integer value) {
            addCriterion("interid =", value, "interid");
            return (Criteria) this;
        }

        public Criteria andInteridNotEqualTo(Integer value) {
            addCriterion("interid <>", value, "interid");
            return (Criteria) this;
        }

        public Criteria andInteridGreaterThan(Integer value) {
            addCriterion("interid >", value, "interid");
            return (Criteria) this;
        }

        public Criteria andInteridGreaterThanOrEqualTo(Integer value) {
            addCriterion("interid >=", value, "interid");
            return (Criteria) this;
        }

        public Criteria andInteridLessThan(Integer value) {
            addCriterion("interid <", value, "interid");
            return (Criteria) this;
        }

        public Criteria andInteridLessThanOrEqualTo(Integer value) {
            addCriterion("interid <=", value, "interid");
            return (Criteria) this;
        }

        public Criteria andInteridIn(List<Integer> values) {
            addCriterion("interid in", values, "interid");
            return (Criteria) this;
        }

        public Criteria andInteridNotIn(List<Integer> values) {
            addCriterion("interid not in", values, "interid");
            return (Criteria) this;
        }

        public Criteria andInteridBetween(Integer value1, Integer value2) {
            addCriterion("interid between", value1, value2, "interid");
            return (Criteria) this;
        }

        public Criteria andInteridNotBetween(Integer value1, Integer value2) {
            addCriterion("interid not between", value1, value2, "interid");
            return (Criteria) this;
        }

        public Criteria andPrctIsNull() {
            addCriterion("prct is null");
            return (Criteria) this;
        }

        public Criteria andPrctIsNotNull() {
            addCriterion("prct is not null");
            return (Criteria) this;
        }

        public Criteria andPrctEqualTo(BigDecimal value) {
            addCriterion("prct =", value, "prct");
            return (Criteria) this;
        }

        public Criteria andPrctNotEqualTo(BigDecimal value) {
            addCriterion("prct <>", value, "prct");
            return (Criteria) this;
        }

        public Criteria andPrctGreaterThan(BigDecimal value) {
            addCriterion("prct >", value, "prct");
            return (Criteria) this;
        }

        public Criteria andPrctGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("prct >=", value, "prct");
            return (Criteria) this;
        }

        public Criteria andPrctLessThan(BigDecimal value) {
            addCriterion("prct <", value, "prct");
            return (Criteria) this;
        }

        public Criteria andPrctLessThanOrEqualTo(BigDecimal value) {
            addCriterion("prct <=", value, "prct");
            return (Criteria) this;
        }

        public Criteria andPrctIn(List<BigDecimal> values) {
            addCriterion("prct in", values, "prct");
            return (Criteria) this;
        }

        public Criteria andPrctNotIn(List<BigDecimal> values) {
            addCriterion("prct not in", values, "prct");
            return (Criteria) this;
        }

        public Criteria andPrctBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("prct between", value1, value2, "prct");
            return (Criteria) this;
        }

        public Criteria andPrctNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("prct not between", value1, value2, "prct");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table templatedetails
     *
     * @mbggenerated do_not_delete_during_merge Mon Feb 28 11:07:27 EST 2011
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table templatedetails
     *
     * @mbggenerated Mon Feb 28 11:07:27 EST 2011
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}